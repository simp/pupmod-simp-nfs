<% if @comment -%>
# <%= @comment %>
<% end -%>
<%
# Here's where we build the options string.

_options = Array.new

if @custom
  # delete parentheses and spaces
  _options = @custom.delete('( )')
  _options = "(#{_options})"
else
  if @insecure
    _options.push('insecure')
  end

  if @rw
    _options.push('rw')
  end

  if @async
    _options.push('async')
  else
    _options.push('sync')
  end

  if @no_wdelay
    _options.push('no_wdelay')
  end

  if @nohide
    _options.push('nohide')
  end

  if @crossmnt
    _options.push('crossmnt')
  end

  if @subtree_check
    _options.push('subtree_check')
  end

  if @insecure_locks
    _options.push('insecure_locks')
  end

  if @mountpoint
    if @mountpoint.is_a?(TrueClass)
      _options.push('mp')
    else
      _options.push("mp=#{@mountpoint}")
    end
  end

  if @fsid
    _options.push("fsid=#{@fsid}")
  end

  if @refer
    _options.push("refer=#{Array(@refer).join(':')}")
  end

  if @nordirplus
    _options.push('nordirplus')
  end

  _options.push("sec=#{Array(@sec).join(':')}")

  if @no_root_squash
    _options.push('no_root_squash')
  end

  if @all_squash
    _options.push('all_squash')
  end

  _options.push("anonuid=#{@anonuid}")
  _options.push("anongid=#{@anongid}")

  _options = "(#{_options.join(',')})"
end

_output = Array.new
# Put it all together
_client = Array(@clients.dup).flatten
_client.map! { |cl| (['ALL','all','ANY','any'].include? cl) ? '*' : cl }.flatten!
_client.push("127.0.0.1")
_client.uniq.sort.each do |cl|
  if cl == '127.0.0.1'
    # Sometimes stunnel will bind on a high port, so we need to account for
    # that.
    _output.push("#{@export_path} #{cl}#{_options.split(')').first + ',insecure)'}")
  else
    _output.push("#{@export_path} #{cl}#{_options}")
  end
end
-%>
<%= _output.join("\n") %>
